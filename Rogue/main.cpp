#include "CombatManager.h"
#include "ConsoleRendering.h"
#include "Player.h"
#include "MapManager.h"
#include "ConsoleWindowManager.h"
#include "Enemy.h"
#include "InventoryManager.h"
#include "TitleScreenManager.h"
#include "UserInterfaceManger.h"

UserInterfaceManager USER_INTERFACE_MANGER;
ConsoleWindowManager CONSOLE_WINDOW_CONTROL;
ConsoleRendering CONSOLE_RENDERING;
TitleScreenManager TITLE_SCREEN_MANAGER;
InventoryManager INVENTORY_MANAGER;
CombatManager COMBAT_MANAGEER;
MapManager MAP_MANAGER;
Player PLAYER;

int main()
{
	CONSOLE_WINDOW_CONTROL.SetText();
	CONSOLE_WINDOW_CONTROL.HideConsoleCursor();
	TITLE_SCREEN_MANAGER.RenderTitle(CONSOLE_WINDOW_CONTROL);
	CONSOLE_WINDOW_CONTROL.SetWindowDisplay(850, 550);

	MAP_MANAGER.RenderMap(CONSOLE_WINDOW_CONTROL);
	while (true)
	{
		while (!MAP_MANAGER.loading_next_map)
		{
			CONSOLE_WINDOW_CONTROL.HideConsoleCursor();
			INVENTORY_MANAGER.CurrentInventoryIndex(INVENTORY_MANAGER);

			INVENTORY_MANAGER.UpdateInventory(INVENTORY_MANAGER, USER_INTERFACE_MANGER);
			PLAYER.PlayerInput(INVENTORY_MANAGER, CONSOLE_WINDOW_CONTROL, MAP_MANAGER, PLAYER, CONSOLE_RENDERING, USER_INTERFACE_MANGER, COMBAT_MANAGEER);

			INVENTORY_MANAGER.InventoryInput(CONSOLE_WINDOW_CONTROL, MAP_MANAGER, INVENTORY_MANAGER, CONSOLE_RENDERING, USER_INTERFACE_MANGER);
			PLAYER.PlayerCollisions(MAP_MANAGER, CONSOLE_WINDOW_CONTROL, PLAYER, INVENTORY_MANAGER, USER_INTERFACE_MANGER);

			PLAYER.RenderPlayer(MAP_MANAGER, CONSOLE_WINDOW_CONTROL, INVENTORY_MANAGER);
			CONSOLE_RENDERING.Render_All(CONSOLE_WINDOW_CONTROL, MAP_MANAGER, PLAYER, INVENTORY_MANAGER, USER_INTERFACE_MANGER);
		}
	}
	return 1;
}
