<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_macro" xml:lang="en-US">
<title>Macro Namespace Reference</title>
<indexterm><primary>Macro</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_namespace_macro_1a86a559b7afd1b6babc93aeb1177b6509">GoToScreenPosition</link> (short C, short R)</para>
</listitem>
            <listitem><para>void <link linkend="_namespace_macro_1a005f2a0ab24b96203446ec9a1a8b9a7f">RepositionWindow</link> (int width, int height)</para>
</listitem>
            <listitem><para>string <link linkend="_namespace_macro_1a9b30bbcb1b1dffca82735239b6e6da98">ReplaceAll</link> (string str, const string &amp;from, const string &amp;to)</para>
</listitem>
            <listitem><para>int <link linkend="_namespace_macro_1a5b7cf896002d88dc2e5ffede2f398709">Separate</link> (int input, char from, char count)</para>
</listitem>
            <listitem><para>int <link linkend="_namespace_macro_1a7192f07d19f55d7f8b863932a5078eab">GenerateRandomNumber</link> (int max)</para>
</listitem>
            <listitem><para>int <link linkend="_namespace_macro_1a3500becfc34f5b1df2d6d976fb5f5f86">GenerateRandomNumberWithoutZero</link> (int max)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespace_macro_1a7192f07d19f55d7f8b863932a5078eab"/><section>
    <title>GenerateRandomNumber()</title>
<indexterm><primary>GenerateRandomNumber</primary><secondary>Macro</secondary></indexterm>
<indexterm><primary>Macro</primary><secondary>GenerateRandomNumber</secondary></indexterm>
<para><computeroutput>int Macro::GenerateRandomNumber (int max)</computeroutput></para><para>
Definition at line <link linkend="__macro_8cpp_source_1l00054">54</link> of file <link linkend="__macro_8cpp_source">Macro.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_namespace_macro_1l00055"/>00055 {
<anchor xml:id="_namespace_macro_1l00056"/>00056 &#32;&#32;&#32;&#32;srand(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis><emphasis role="keyword">&gt;</emphasis>(time(<emphasis role="keyword">nullptr</emphasis>)));
<anchor xml:id="_namespace_macro_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rand()&#32;%&#32;max;
<anchor xml:id="_namespace_macro_1l00058"/>00058 }
</programlisting>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_macro_a7192f07d19f55d7f8b863932a5078eab_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_macro_1a3500becfc34f5b1df2d6d976fb5f5f86"/><section>
    <title>GenerateRandomNumberWithoutZero()</title>
<indexterm><primary>GenerateRandomNumberWithoutZero</primary><secondary>Macro</secondary></indexterm>
<indexterm><primary>Macro</primary><secondary>GenerateRandomNumberWithoutZero</secondary></indexterm>
<para><computeroutput>int Macro::GenerateRandomNumberWithoutZero (int max)</computeroutput></para><para>
Definition at line <link linkend="__macro_8cpp_source_1l00060">60</link> of file <link linkend="__macro_8cpp_source">Macro.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_namespace_macro_1l00061"/>00061 {
<anchor xml:id="_namespace_macro_1l00062"/>00062 &#32;&#32;&#32;&#32;srand(time(<emphasis role="keyword">nullptr</emphasis>));
<anchor xml:id="_namespace_macro_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(rand()&#32;%&#32;max)&#32;+&#32;1.0;
<anchor xml:id="_namespace_macro_1l00064"/>00064 }
</programlisting>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_macro_a3500becfc34f5b1df2d6d976fb5f5f86_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_macro_1a86a559b7afd1b6babc93aeb1177b6509"/><section>
    <title>GoToScreenPosition()</title>
<indexterm><primary>GoToScreenPosition</primary><secondary>Macro</secondary></indexterm>
<indexterm><primary>Macro</primary><secondary>GoToScreenPosition</secondary></indexterm>
<para><computeroutput>void Macro::GoToScreenPosition (short C, short R)</computeroutput></para><para>
Definition at line <link linkend="__macro_8cpp_source_1l00007">7</link> of file <link linkend="__macro_8cpp_source">Macro.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_namespace_macro_1l00008"/>00008 {
<anchor xml:id="_namespace_macro_1l00009"/>00009 &#32;&#32;&#32;&#32;COORD&#32;xy;
<anchor xml:id="_namespace_macro_1l00010"/>00010 &#32;&#32;&#32;&#32;xy.X&#32;=&#32;C;
<anchor xml:id="_namespace_macro_1l00011"/>00011 &#32;&#32;&#32;&#32;xy.Y&#32;=&#32;R;
<anchor xml:id="_namespace_macro_1l00012"/>00012 &#32;&#32;&#32;&#32;SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),&#32;xy);
<anchor xml:id="_namespace_macro_1l00013"/>00013 }
</programlisting>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_macro_a86a559b7afd1b6babc93aeb1177b6509_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_macro_1a9b30bbcb1b1dffca82735239b6e6da98"/><section>
    <title>ReplaceAll()</title>
<indexterm><primary>ReplaceAll</primary><secondary>Macro</secondary></indexterm>
<indexterm><primary>Macro</primary><secondary>ReplaceAll</secondary></indexterm>
<para><computeroutput>string Macro::ReplaceAll (string str, const string &amp; from, const string &amp; to)</computeroutput></para><para>
Definition at line <link linkend="__macro_8cpp_source_1l00034">34</link> of file <link linkend="__macro_8cpp_source">Macro.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_namespace_macro_1l00035"/>00035 {
<anchor xml:id="_namespace_macro_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;start_pos&#32;=&#32;0;
<anchor xml:id="_namespace_macro_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((start_pos&#32;=&#32;str.find(from,&#32;start_pos))&#32;!=&#32;string::npos)
<anchor xml:id="_namespace_macro_1l00038"/>00038 &#32;&#32;&#32;&#32;{
<anchor xml:id="_namespace_macro_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.replace(start_pos,&#32;from.length(),&#32;to);
<anchor xml:id="_namespace_macro_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;start_pos&#32;+=&#32;to.length();&#32;<emphasis role="comment">//&#32;Handles&#32;case&#32;where&#32;&apos;to&apos;&#32;is&#32;a&#32;substring&#32;of&#32;&apos;from&apos;</emphasis>
<anchor xml:id="_namespace_macro_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="_namespace_macro_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str;
<anchor xml:id="_namespace_macro_1l00043"/>00043 }
</programlisting>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_macro_a9b30bbcb1b1dffca82735239b6e6da98_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_macro_1a005f2a0ab24b96203446ec9a1a8b9a7f"/><section>
    <title>RepositionWindow()</title>
<indexterm><primary>RepositionWindow</primary><secondary>Macro</secondary></indexterm>
<indexterm><primary>Macro</primary><secondary>RepositionWindow</secondary></indexterm>
<para><computeroutput>void Macro::RepositionWindow (int width, int height)</computeroutput></para><para>
Definition at line <link linkend="__macro_8cpp_source_1l00015">15</link> of file <link linkend="__macro_8cpp_source">Macro.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_namespace_macro_1l00016"/>00016 {
<anchor xml:id="_namespace_macro_1l00017"/>00017 &#32;&#32;&#32;&#32;HWND&#32;hConsoleWnd&#32;=&#32;GetConsoleWindow();
<anchor xml:id="_namespace_macro_1l00018"/>00018 &#32;&#32;&#32;&#32;HMONITOR&#32;hMonitor&#32;=&#32;MonitorFromWindow(hConsoleWnd,&#32;MONITOR_DEFAULTTONEAREST);
<anchor xml:id="_namespace_macro_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hMonitor)
<anchor xml:id="_namespace_macro_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="_namespace_macro_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MONITORINFO&#32;info{
<anchor xml:id="_namespace_macro_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(info)
<anchor xml:id="_namespace_macro_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};&#32;<emphasis role="comment">//&#32;set&#32;cbSize&#32;member&#32;and&#32;fill&#32;the&#32;rest&#32;with&#32;zero</emphasis>
<anchor xml:id="_namespace_macro_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(::GetMonitorInfo(hMonitor,&#32;&amp;info))
<anchor xml:id="_namespace_macro_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_namespace_macro_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x&#32;=&#32;(info.rcWork.left&#32;+&#32;info.rcWork.right)&#32;/&#32;2&#32;-&#32;width&#32;/&#32;2;
<anchor xml:id="_namespace_macro_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y&#32;=&#32;(info.rcWork.top&#32;+&#32;info.rcWork.bottom)&#32;/&#32;2&#32;-&#32;height&#32;/&#32;2;
<anchor xml:id="_namespace_macro_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetConsoleTitle(TEXT(<emphasis role="stringliteral">&quot;ROGUE&quot;</emphasis>));
<anchor xml:id="_namespace_macro_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowPos(hConsoleWnd,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;x,&#32;y,&#32;width,&#32;height,&#32;SWP_NOZORDER&#32;|&#32;SWP_NOOWNERZORDER&#32;|&#32;SWP_SHOWWINDOW);
<anchor xml:id="_namespace_macro_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_namespace_macro_1l00031"/>00031 &#32;&#32;&#32;&#32;}
<anchor xml:id="_namespace_macro_1l00032"/>00032 }
</programlisting>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_macro_a005f2a0ab24b96203446ec9a1a8b9a7f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_macro_1a5b7cf896002d88dc2e5ffede2f398709"/><section>
    <title>Separate()</title>
<indexterm><primary>Separate</primary><secondary>Macro</secondary></indexterm>
<indexterm><primary>Macro</primary><secondary>Separate</secondary></indexterm>
<para><computeroutput>int Macro::Separate (int input, char from, char count)</computeroutput></para><para>
Definition at line <link linkend="__macro_8cpp_source_1l00045">45</link> of file <link linkend="__macro_8cpp_source">Macro.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_namespace_macro_1l00046"/>00046 {
<anchor xml:id="_namespace_macro_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;d&#32;=&#32;1;
<anchor xml:id="_namespace_macro_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;from;&#32;i++,&#32;d&#32;*=&#32;10);
<anchor xml:id="_namespace_macro_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;1;
<anchor xml:id="_namespace_macro_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++,&#32;m&#32;*=&#32;10);
<anchor xml:id="_namespace_macro_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((input&#32;/&#32;d)&#32;%&#32;m);
<anchor xml:id="_namespace_macro_1l00052"/>00052 }
</programlisting></section>
</section>
</section>
